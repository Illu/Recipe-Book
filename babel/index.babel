var RECIPES = [{
      "name": "Pancakes",
      "ingredients": ["flour", "milk", "eggs", "sugar", "butter"]
    }, {
      "name": "Pastas",
      "ingredients": ["pastas", "water"]
    }];

var STORAGE_NAME = "_Illusion_recipes";

var AddButton = React.createClass({
  handleClick: function(){
    var name = document.getElementById('rName').value;
    if (name.length <= 0)
      name = 'Unnamed recipe';
    var ingredients = document.getElementById('rIngredients').value.split(',');
    RECIPES.push({"name": name, "ingredients": ingredients});
    this.props.updateRecipe();
  },
  render: function(){
    return (
      <div>
        <button className="btn btn-primary" data-toggle="modal" data-target="#addModal">
          Add recipe
        </button>
        <div id="addModal" className="modal fade" role="dialog">
          <div className="modal-dialog">
            <div className="modal-content">
              <div className="modal-header">
                <button type="button" className="close" data-dismiss="modal">&times;</button>
                <h4 className="modal-title">Add Recipe</h4>
              </div>
              <div className="modal-body">
                <p>Choose a name for your recipe</p>
                <input type="text" id="rName" placeholder="Name..."></input>
                <p>Enter the ingredients for your recipe, separated by a comma</p>
                <input type="text" id="rIngredients" className='ingredientsInput' placeholder="Ingredient 1, ingredient 2, ..."></input>
              </div>
              <div className="modal-footer">
                <button type="button" className="btn btn-default" data-dismiss="modal">Close</button>
                <button onClick={this.handleClick} type="button" className="btn btn-primary" data-dismiss="modal">Add recipe</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }
});

var DeleteButton = React.createClass({
  handleClick: function(){
    RECIPES.splice(this.props.num - 1, 1);
    this.props.updateRecipe();
  },
  render: function(){
    return (
      <button onClick={this.handleClick} className="btn btn-danger deleteButton">Delete</button>
    );
  }
  
});

var EditButton = React.createClass({
  
  handleClick: function(){
    var recipeId = 'rEditName' + this.props.num;
    var ingredientsId = 'rEditIngredients' + this.props.num;
    var name = document.getElementById(recipeId).value;
    if (name.length <= 0)
      name = 'Unnamed recipe';
    var ingredients = document.getElementById(ingredientsId).value.split(','); 
    RECIPES[this.props.num - 1] = {"name": name, "ingredients": ingredients};
    this.props.updateRecipe();
  },
  
   render: function(){
     
     var idName = 'editModal' + this.props.num;
     var idFull = '#' + idName;
     var ingredients = this.props.recipe.ingredients.join(',');
     var recipeId = 'rEditName' + this.props.num;
     var ingredientsId = 'rEditIngredients' + this.props.num;
     
    return (
      <div>
        <button className="btn btn-default" data-toggle="modal" data-target={idFull}>
          Edit
        </button>
        <div id={idName} className="modal fade" role="dialog">
          <div className="modal-dialog">
            <div className="modal-content">
              <div className="modal-header">
                <button type="button" className="close" data-dismiss="modal">&times;</button>
                <h4 className="modal-title">Edit Recipe</h4>
              </div>
              <div className="modal-body">
                <p>Change the name of the recipe</p>
                <input type="text" id={recipeId} defaultValue={this.props.recipe.name}></input>
                <p>Change the ingredients for your recipe</p>
                <input type="text" id={ingredientsId} className='ingredientsInput' defaultValue={ingredients}></input>
              </div>
              <div className="modal-footer">
                <button type="button" className="btn btn-default" data-dismiss="modal">Close</button>
                <button onClick={this.handleClick} type="button" className="btn btn-primary" data-dismiss="modal">Edit recipe</button>
              </div>
            </div>
          </div>
        </div>
      </div>
    );
  }
});

var Ingredients = React.createClass({
  
  render: function(){
    var nodes = this.props.data.map(function(ingredient){
      return (<li className="list-group-item">{ingredient}</li>);
    });
    return (
      <ul className="list-group">
        {nodes}
      </ul>
    );
  }
});

var Recipes = React.createClass({
  
  updateRecipe: function(){
    this.setState({data: RECIPES});
  },
  
  getInitialState: function() {
    
    if (typeof(Storage) !== "undefined") {
      if (JSON.parse(localStorage.getItem(STORAGE_NAME)))
        {
          console.log("retrieved data from memory: " + localStorage.getItem(STORAGE_NAME));
          RECIPES = JSON.parse(localStorage.getItem(STORAGE_NAME));
        }
    } else {
      console.log("Web storage isn't supported on this browser");
    }
    
    return {data: RECIPES}
  },
  
  render: function(){
    
    console.log(this.state.data)
    var num = 0;
    var parent = this;
    localStorage.setItem(STORAGE_NAME, JSON.stringify(RECIPES));
    
    var nodes = this.state.data.map(function(recipe){
      var collapseName = 'collapse' + num;
      num++;
      return (
        <div className='panel-group'>
          <div className='panel panel-default'>
            <div className='panel-heading'>
              <h4 className='panel-title'>
                <a data-toggle='collapse' href={'#' + collapseName}>{recipe.name}</a>
              </h4>
            </div>
            <div id={collapseName} className='panel-collapse collapse'>
              <Ingredients data={recipe.ingredients}/>
              <div className='panel-footer'>
                <DeleteButton num={num} updateRecipe={parent.updateRecipe}/>
                <EditButton num={num} recipe={recipe} updateRecipe={parent.updateRecipe}/>
              </div>
            </div>
            
        </div>
      </div>
      );
    })
    
    return(
      <div className='container'>
        <div className='row'>
          <div className='col-xs-3' />
          <div className='col-xs-6'>
            {nodes}
          </div>
        </div>
        <div className='row'>
          <div className='col-xs-3' />
          <div className='col-xs-6'>
            <AddButton updateRecipe={this.updateRecipe}/>
          </div>
        </div>
      </div>
    );
  }
});

ReactDOM.render(
  <Recipes data={RECIPES} />,
  document.getElementById("book")
);